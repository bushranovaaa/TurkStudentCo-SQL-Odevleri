-- VeritabanÄ± oluÅŸturma
CREATE DATABASE FirstLessonDB;
GO
USE FirstLessonDB;
GO

-- Departmanlar tablosu oluÅŸturma
CREATE TABLE Departments(
    DepartmentID INT IDENTITY(1,1) PRIMARY KEY,  
    DepartmentName NVARCHAR(50) NOT NULL
);

-- Ã‡alÄ±ÅŸanlar tablosu oluÅŸturma
CREATE TABLE Employees(
    EmployeeID INT PRIMARY KEY IDENTITY(1,1),  
    FirstName NVARCHAR(100) NOT NULL,
    LastName NVARCHAR(100) NOT NULL,
    Age TINYINT NOT NULL,
    DepartmentID INT,
    Salary DECIMAL(10,2) NOT NULL,  
    JoinDate DATE,
    FOREIGN KEY (DepartmentID) REFERENCES Departments(DepartmentID)  
);

-- Departmanlara veri ekleme
INSERT INTO Departments(DepartmentName)
VALUES (N'IT'), (N'HR'), (N'Finance');

-- Ã‡alÄ±ÅŸanlara veri ekleme
INSERT INTO Employees(FirstName, LastName, Age, DepartmentID, Salary, JoinDate) 
VALUES 
    ('John', 'Doe', 30, 1, 55000, '2020-01-15'),
    ('Jane', 'Smith', 45, 2, 65000, '2018-07-20'),
    ('Sam', 'Brown', 28, 1, 52000, '2021-04-25'),
    ('Lisa', 'White', 35, 3, 70000, '2019-03-18'),
    ('Mark', 'Black', 50, 1, 75000, '2015-11-05'),
    ('Lucy', 'Green', 40, 2, 60000, '2017-10-10');

-- Ã‡alÄ±ÅŸanlarÄ± listeleme
SELECT * FROM Employees;

-- DepartmanlarÄ± listeleme
SELECT * FROM Departments;

-- Ã‡alÄ±ÅŸanlardan sadece isim, soyisim ve maaÅŸ bilgisi
SELECT FirstName, LastName, Salary FROM Employees;

-- Ã‡alÄ±ÅŸanlarÄ±n departman bilgilerini tekrar olmadan listeleme
SELECT DISTINCT FirstName, DepartmentID FROM Employees;

-- HR departmanÄ±ndaki Ã§alÄ±ÅŸanlarÄ± listeleme
SELECT * FROM Employees WHERE DepartmentID = 2;

-- Ã‡alÄ±ÅŸanlarÄ± maaÅŸlarÄ±na gÃ¶re bÃ¼yÃ¼kten kÃ¼Ã§Ã¼ÄŸe sÄ±ralama
SELECT * FROM Employees ORDER BY Salary DESC;

-- Ã‡alÄ±ÅŸanlarÄ±n ad ve soyadÄ±nÄ± birleÅŸtirerek tam isim oluÅŸturma
SELECT CONCAT(FirstName, ' ', LastName) AS FullName FROM Employees;
```

ğŸ’– *Ä°ÅŸte hazÄ±r!* GitHubâ€™a ekleyebilirsin aÅŸkÄ±m! ğŸ˜˜ğŸ’•
